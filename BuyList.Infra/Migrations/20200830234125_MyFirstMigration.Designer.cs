// <auto-generated />
using System;
using BuyList.Infra.Contexts;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace BuyList.Infra.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20200830234125_MyFirstMigration")]
    partial class MyFirstMigration
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("BuyList.Domain.Entities.Item", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<string>("Category")
                        .HasColumnType("varchar(120)")
                        .HasMaxLength(120);

                    b.Property<string>("Name")
                        .HasColumnType("varchar(120)")
                        .HasMaxLength(120);

                    b.Property<Guid?>("OwnerId")
                        .HasColumnType("char(36)");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.Property<string>("TypeOfMeasure")
                        .HasColumnType("varchar(10)");

                    b.Property<decimal>("Value")
                        .HasColumnType("decimal(5, 2)");

                    b.HasKey("Id");

                    b.HasIndex("OwnerId");

                    b.ToTable("Item");
                });

            modelBuilder.Entity("BuyList.Domain.Entities.ListBuy", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Name")
                        .HasColumnType("varchar(120)")
                        .HasMaxLength(120);

                    b.Property<Guid?>("OwnerId")
                        .HasColumnType("char(36)");

                    b.Property<decimal>("TotalValue")
                        .HasColumnType("decimal(12, 2)");

                    b.HasKey("Id");

                    b.HasIndex("OwnerId");

                    b.ToTable("BuyList");
                });

            modelBuilder.Entity("BuyList.Domain.Entities.ListBuyItem", b =>
                {
                    b.Property<Guid>("ListBuyId")
                        .HasColumnType("char(36)");

                    b.Property<Guid>("ItemId")
                        .HasColumnType("char(36)");

                    b.HasKey("ListBuyId", "ItemId");

                    b.HasIndex("ItemId");

                    b.ToTable("ListBuyItems");
                });

            modelBuilder.Entity("BuyList.Domain.Entities.User", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<string>("Email")
                        .HasColumnType("varchar(120)")
                        .HasMaxLength(120);

                    b.Property<string>("Name")
                        .HasColumnType("varchar(120)")
                        .HasMaxLength(120);

                    b.Property<string>("Password")
                        .HasColumnType("varchar(120)")
                        .HasMaxLength(120);

                    b.HasKey("Id");

                    b.ToTable("User");
                });

            modelBuilder.Entity("BuyList.Domain.Entities.Item", b =>
                {
                    b.HasOne("BuyList.Domain.Entities.User", "Owner")
                        .WithMany("Items")
                        .HasForeignKey("OwnerId");
                });

            modelBuilder.Entity("BuyList.Domain.Entities.ListBuy", b =>
                {
                    b.HasOne("BuyList.Domain.Entities.User", "Owner")
                        .WithMany("BuyLists")
                        .HasForeignKey("OwnerId");
                });

            modelBuilder.Entity("BuyList.Domain.Entities.ListBuyItem", b =>
                {
                    b.HasOne("BuyList.Domain.Entities.Item", "Item")
                        .WithMany("ListBuys")
                        .HasForeignKey("ItemId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BuyList.Domain.Entities.ListBuy", "ListBuy")
                        .WithMany("Items")
                        .HasForeignKey("ListBuyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
